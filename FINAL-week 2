1.
def color_translator(color):
	if color == "red":
		hex_color = "#ff0000"
	elif color == "green":
		hex_color = "#00ff00"
	elif color == "blue":
		hex_color = "#0000ff"
	else:
		hex_color = "unknown"
	return hex_color

print(color_translator("blue")) # Should be #0000ff
print(color_translator("yellow")) # Should be unknown
print(color_translator("red")) # Should be #ff0000
print(color_translator("black")) # Should be unknown
print(color_translator("green")) # Should be #00ff00
print(color_translator("")) # Should be unknown

2.
False

3.
To handle more than two comparison cases

4.
def exam_grade(score):
	if score>95:
		grade = "Top Score"
	elif score>=60 and score<=95 :
		grade = "Pass"
	else:
		grade = "Fail"
	return grade

print(exam_grade(65)) # Should be Pass
print(exam_grade(55)) # Should be Fail
print(exam_grade(60)) # Should be Pass
print(exam_grade(95)) # Should be Pass
print(exam_grade(100)) # Should be Top Score
print(exam_grade(0)) # Should be Fail

5.
1

6. X-- WRONG--X
def format_name(first_name, last_name):
	# code goes here
	if len(last_name)>0 and len(first_name)>0:
		print("name: " + last_name , first_name)

	elif len(last_name)==0 and len(first_name)>0:
		print("name: " + first_name)

	elif len(last_name)>0 and len(first_name)==0:
		print("name: " + last_name)

	else:
		print(" ")
		
format_name("Ernest", "Hemingway")
# Should return the string "Name: Hemingway, Ernest"

format_name("", "Madonna")
# Should return the string "Name: Madonna"

format_name("Voltaire", "")
# Should return the string "Name: Voltaire"

format_name("", "")

7.
def longest_word(word1, word2, word3):
	if len(word1) >= len(word2) and len(word1) >= len(word3):
		word = word1
	elif len(word2) >= len(word2) and len(word2) >= len(word3) :
		word = word2
	else:
		word = word3
	return(word)

print(longest_word("chair", "couch", "table"))
print(longest_word("bed", "bath", "beyond"))
print(longest_word("laptop", "notebook", "desktop"))

8.
10

9.
True

10.
def fractional_part(numerator, denominator):
	# Operate with numerator and denominator to 
# keep just the fractional part of the quotient

	if denominator==0:
		return 0
	else:
		return float(numerator%denominator)/denominator

print(fractional_part(5, 5)) # Should be 0
print(fractional_part(5, 4)) # Should be 0.25
print(fractional_part(5, 3)) # Should be 0.66...
print(fractional_part(5, 2)) # Should be 0.5
print(fractional_part(5, 0)) # Should be 0
print(fractional_part(0, 5)) # Should be 0
